PaxosInstance
-------------
..


ReplicatedLog interface:
------------------------
+Append(ByteString): to append
+OnAppend(ByteString): a callback, when a new value is appended


OnAppend() returns a entryID as well as a ByteString.

The various DBs need to store the highest entryID they have processed.


LogDemux
--------
The ReplicatedLog is used by various distributed modules such as
the VersionDB, TreeDB or the MasterLease module. The LogDemux
selects the appropriate module.

The modules each have their own protocolID, which is a 1 byte value
appearing at the front of each ByteString of the ReplicatedLog.


DB modules
----------
The DB modules uses the ReplicatedLog to communicate with its
counterparts on other nodes. Since the ReplicatedLog is in-memory only,
(a cache really) the DBs have to commit all updates to disk before returning.

In case of a lagging node, the other node's ReplicatedLog cache may
not be enough for catchup. In this case, the other node DB needs to be
copied over. We need a protocol for each DB for this backend copying.


What is the common DB interface?
--------------------------------
VersionDB: lastEntryID, (fileID, nodeID) -> (version)
TreeDB: lastEntryID, (path) -> (pdiskID, fileID)

+Snapshot(char* filepath) - this should spawn a new thread


File retrieval
--------------
Used only for inter-node communication, not used by the client.
Only has to support GET.

